# -*- coding: utf-8 -*-
"""6-10.FastText(jamo).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1r8mMZW2CV_GFOipMkEm5x_cnhLmzjVM9
"""

# Commented out IPython magic to ensure Python compatibility.
# %pip install hangul_utils

# FastText 예시 : 한글을 자모 단위로 분리해서 FastText로 임베딩한다.
#
# 코드 구현 : blog.naver.com/chunjein, 2021.03.23
# pip install hangul_utils
# -----------------------------------------------------------------------
from hangul_utils import split_syllables, join_jamos
from gensim.models.fasttext import FastText
import numpy as np
import pickle

# 한글 자모 분리/합침 연습
jamo = split_syllables('안녕하세요')
word = join_jamos(jamo)
print(jamo)
print(word)

# Commented out IPython magic to ensure Python compatibility.
# 전처리가 완료된 한글 코퍼스를 읽어온다.
# %cd '/content/drive/MyDrive/Colab Notebooks'
with open('data/konovel_preprocessed.pkl', 'rb') as f:
    sentence_list = pickle.load(f)

sentence_list[0]

# sentence_list를 한글 자모로 분리한다.
sentence_jamo = []
for sentence in sentence_list:
    jamo = []
    for word in sentence:
        jamo.append(split_syllables(word))
    sentence_jamo.append(jamo)

sentence_jamo[0]

model = FastText(size=100, window=5, min_count=10, sentences=sentence_jamo, 
                 max_vocab_size=10000, sample=1e-5, iter=100, bucket=2000000, sg=1, negative=2)

def get_word_vector(model, word):
    jamo = split_syllables(word)
    return model.wv[jamo]

def get_similar_words(model, word, top_n=10):
    jamo = split_syllables(word)
    sim = []
    for (jamo, score) in model.wv.most_similar(jamo, topn = top_n):
        sim.append((join_jamos(jamo), score))
    return sim

# 어휘 사전 확인
model.wv.vocab

get_word_vector(model, '학교')

get_similar_words(model, '바다')

